{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/accueil/accueil.component.css","webpack:///./src/app/accueil/accueil.component.html","webpack:///./src/app/accueil/accueil.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authguard.guard.ts","webpack:///./src/app/broadcast-favori-create.service.ts","webpack:///./src/app/detail-film/detail-film.component.css","webpack:///./src/app/detail-film/detail-film.component.html","webpack:///./src/app/detail-film/detail-film.component.ts","webpack:///./src/app/detail-serie/detail-serie.component.css","webpack:///./src/app/detail-serie/detail-serie.component.html","webpack:///./src/app/detail-serie/detail-serie.component.ts","webpack:///./src/app/favori/favori.service.ts","webpack:///./src/app/favori/favori.ts","webpack:///./src/app/favori/gestion-favori/gestion-favori.component.css","webpack:///./src/app/favori/gestion-favori/gestion-favori.component.html","webpack:///./src/app/favori/gestion-favori/gestion-favori.component.ts","webpack:///./src/app/favori/smart-manager-favori/smart-manager-favori.component.css","webpack:///./src/app/favori/smart-manager-favori/smart-manager-favori.component.html","webpack:///./src/app/favori/smart-manager-favori/smart-manager-favori.component.ts","webpack:///./src/app/film/film.component.css","webpack:///./src/app/film/film.component.html","webpack:///./src/app/film/film.component.ts","webpack:///./src/app/film/film.service.ts","webpack:///./src/app/film/film.ts","webpack:///./src/app/film/smart-manager-film/smart-manager-film.component.css","webpack:///./src/app/film/smart-manager-film/smart-manager-film.component.html","webpack:///./src/app/film/smart-manager-film/smart-manager-film.component.ts","webpack:///./src/app/nav-bar/nav-bar.component.css","webpack:///./src/app/nav-bar/nav-bar.component.html","webpack:///./src/app/nav-bar/nav-bar.component.ts","webpack:///./src/app/nav-bar/nav-bar.service.ts","webpack:///./src/app/recherche-resultat/recherche-resultat.component.css","webpack:///./src/app/recherche-resultat/recherche-resultat.component.html","webpack:///./src/app/recherche-resultat/recherche-resultat.component.ts","webpack:///./src/app/serie/serie.component.css","webpack:///./src/app/serie/serie.component.html","webpack:///./src/app/serie/serie.component.ts","webpack:///./src/app/serie/serie.service.ts","webpack:///./src/app/serie/serie.ts","webpack:///./src/app/serie/smart-manager-serie/smart-manager-serie.component.css","webpack:///./src/app/serie/smart-manager-serie/smart-manager-serie.component.html","webpack:///./src/app/serie/smart-manager-serie/smart-manager-serie.component.ts","webpack:///./src/app/utilisateur/connexion/connexion.component.css","webpack:///./src/app/utilisateur/connexion/connexion.component.html","webpack:///./src/app/utilisateur/connexion/connexion.component.ts","webpack:///./src/app/utilisateur/inscription/inscription.component.css","webpack:///./src/app/utilisateur/inscription/inscription.component.html","webpack:///./src/app/utilisateur/inscription/inscription.component.ts","webpack:///./src/app/utilisateur/smart-manager-utilisateur/smart-manager-utilisateur.component.css","webpack:///./src/app/utilisateur/smart-manager-utilisateur/smart-manager-utilisateur.component.html","webpack:///./src/app/utilisateur/smart-manager-utilisateur/smart-manager-utilisateur.component.ts","webpack:///./src/app/utilisateur/utilisateur.service.ts","webpack:///./src/app/utilisateur/utilisateur.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".form-control-borderless {\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.form-control-borderless:hover, .form-control-borderless:active, .form-control-borderless:focus {\\r\\n  border: none;\\r\\n  outline: none;\\r\\n  box-shadow: none;\\r\\n}\\r\\n\"","module.exports = \"<p *ngIf=\\\"authGuard.canActivate() == true\\\">\\r\\n  Connecté\\r\\n</p>\\r\\nBienvenue\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {UtilisateurService} from '../utilisateur/utilisateur.service';\r\nimport {AuthguardGuard} from '../authguard.guard';\r\n\r\n@Component({\r\n  selector: 'app-accueil',\r\n  templateUrl: './accueil.component.html',\r\n  styleUrls: ['./accueil.component.css']\r\n})\r\nexport class AccueilComponent implements OnInit {\r\n\r\n\r\n\r\n  constructor(private utilisateur: UtilisateurService, public authGuard: AuthguardGuard) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-nav-bar></app-nav-bar>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'WatchingTV';\r\n\r\n  constructor(){}\r\n\r\n  ngOnInit(){\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AccueilComponent } from './accueil/accueil.component';\r\nimport { ConnexionComponent } from './utilisateur/connexion/connexion.component';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { InscriptionComponent } from './utilisateur/inscription/inscription.component';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\nimport { FilmComponent } from './film/film.component';\r\nimport { SerieComponent } from './serie/serie.component';\r\nimport {FilmService} from './film/film.service';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {SerieService} from './serie/serie.service';\r\nimport { DetailFilmComponent } from './detail-film/detail-film.component';\r\nimport { DetailSerieComponent } from './detail-serie/detail-serie.component';\r\nimport { SmartManagerUtilisateurComponent } from './utilisateur/smart-manager-utilisateur/smart-manager-utilisateur.component';\r\nimport { RechercheResultatComponent } from './recherche-resultat/recherche-resultat.component';\r\nimport {UtilisateurService} from './utilisateur/utilisateur.service';\r\nimport {AuthguardGuard} from './authguard.guard';\r\nimport { GestionFavoriComponent } from './favori/gestion-favori/gestion-favori.component';\r\nimport { SmartManagerFavoriComponent } from './favori/smart-manager-favori/smart-manager-favori.component';\r\nimport { SmartManagerFilmComponent } from './film/smart-manager-film/smart-manager-film.component';\r\nimport { SmartManagerSerieComponent } from './serie/smart-manager-serie/smart-manager-serie.component';\r\nimport {FavoriService} from './favori/favori.service';\r\n\r\nconst routes:Routes =[\r\n  {\r\n    path: \"accueil\",\r\n    component: AccueilComponent,\r\n    canActivate: [AuthguardGuard],\r\n    pathMatch: \"full\"\r\n  },\r\n  {\r\n    path: \"connexion\",\r\n    component:ConnexionComponent\r\n  },\r\n  {\r\n    path: \"inscription\",\r\n    component:SmartManagerUtilisateurComponent\r\n  },\r\n  {\r\n    path: \"film\",\r\n    component:FilmComponent\r\n  },\r\n  {\r\n    path: \"série\",\r\n    component:SerieComponent\r\n  },\r\n  {\r\n    path: \"detail-film/:filmID\",\r\n    component:DetailFilmComponent\r\n  },\r\n  {\r\n    path: \"detail-serie/:serieID\",\r\n    component:DetailSerieComponent\r\n  },\r\n  {\r\n    path:\"recherche-resultat/:result\",\r\n    component:RechercheResultatComponent\r\n  },\r\n  {\r\n    path:\"favoris\",\r\n    component:GestionFavoriComponent\r\n  }\r\n\r\n\r\n]\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AccueilComponent,\r\n    ConnexionComponent,\r\n    InscriptionComponent,\r\n    NavBarComponent,\r\n    FilmComponent,\r\n    SerieComponent,\r\n    DetailFilmComponent,\r\n    DetailSerieComponent,\r\n    SmartManagerUtilisateurComponent,\r\n    RechercheResultatComponent,\r\n    GestionFavoriComponent,\r\n    SmartManagerFavoriComponent,\r\n    SmartManagerFilmComponent,\r\n    SmartManagerSerieComponent,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  providers: [FilmService,SerieService,UtilisateurService,FavoriService, AuthguardGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {UtilisateurService} from './utilisateur/utilisateur.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthguardGuard implements CanActivate {\r\n  constructor(private utilisateur: UtilisateurService){}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n      state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.utilisateur.isLoggedIn;\r\n  }\r\n\r\n  getIdUtilisateur(): Observable<number> | Promise<number> | number {\r\n    return this.utilisateur.idUtilisateurLogged;\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {Favori} from './favori/favori';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {filter} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BroadcastFavoriCreateService {\r\n\r\n  private favoriCreatedSubject: BehaviorSubject<Favori> = new BehaviorSubject(null);\r\n  //public favoriCreated$: Observable<Favori> = this.favoriCreatedSubject.asObservable().pipe(filter(favori=>!!favori));\r\n\r\n  constructor() { }\r\n\r\n  public sendFavori(favori:Favori){\r\n    this.favoriCreatedSubject.next(favori);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n  <div *ngIf=\\\"film\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"card mt-5 mb-5\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            {{ film.title }}\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-5\\\">\\r\\n                <img src=\\\"https://image.tmdb.org/t/p/w500/{{ film.poster_path }}\\\" class=\\\"img-fluid\\\" alt=\\\"{{ film.title }}\\\">\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-7\\\">\\r\\n                <ul class=\\\"list-group\\\">\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <strong>Date de sortie: </strong> {{ film.release_date | date:'dd MMMM yyyy' }}\\r\\n                  </li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <strong>Résumé: </strong> {{ film.overview }}\\r\\n                  </li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <strong>Avis des utilisateurs: </strong> {{ film.vote_average }} / 10\\r\\n                  </li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <strong>Durée: </strong> {{ film.runtime }} minutes\\r\\n                  </li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <strong>BoxOffice: </strong> {{ film.revenue }} dollars\\r\\n                  </li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <strong>Budget: </strong> {{ film.budget }} dollars\\r\\n                  </li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <strong>Production: </strong>\\r\\n                    <span *ngFor=\\\"let prod of film.production_companies\\\" >\\r\\n                      {{ prod.name }}\\r\\n                    </span>\\r\\n                  </li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <strong>Genre: </strong>\\r\\n                    <span *ngFor=\\\"let genre of film.genres\\\" class=\\\"badge badge-primary mr-2\\\">\\r\\n                      {{ genre.name }}\\r\\n                    </span>\\r\\n                  </li>\\r\\n                  <button *ngIf=\\\"authguard.canActivate() == true\\\" (click)=\\\"createFavori()\\\" class=\\\"btn btn-block btn-info\\\" value=\\\"Ajouter à mes favoris\\\">Ajouter à mes favoris</button>\\r\\n                  <button *ngIf=\\\"!authguard.canActivate()\\\" class=\\\"btn btn-block btn-info\\\">Vous devez être connecté pour ajouter ce film dans vos favoris</button>\\r\\n                </ul>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div><!-- /.card -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {FilmService} from '../film/film.service';\r\nimport {AuthguardGuard} from '../authguard.guard';\r\nimport {Favori} from '../favori/favori';\r\nimport {Film} from '../film/film';\r\nimport {BroadcastFavoriCreateService} from '../broadcast-favori-create.service';\r\nimport {FavoriService} from '../favori/favori.service';\r\nimport {Serie} from '../serie/serie';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-detail-film',\r\n  templateUrl: './detail-film.component.html',\r\n  styleUrls: ['./detail-film.component.css']\r\n})\r\nexport class DetailFilmComponent implements OnInit {\r\n  film:any;\r\n\r\n  private _filmTmp: Film = new Film;\r\n  private _filmCreated:EventEmitter<Film> = new EventEmitter();\r\n  private _films:Film[] = [];\r\n  private _subQueryFilm: Subscription;\r\n\r\n  private _favoriTmp: Favori = new Favori;\r\n  private _favoriCreated:EventEmitter<Favori> = new EventEmitter();\r\n\r\n  constructor(public router:ActivatedRoute,private filmService:FilmService,private favoriService:FavoriService, public authguard:AuthguardGuard, public broadcastFavoriCreated:BroadcastFavoriCreateService) { }\r\n\r\n  ngOnInit() {\r\n    this.router.params.subscribe((params)=>{\r\n      const id = params['filmID'];\r\n      this.filmService.getFilm(id).subscribe(data =>{\r\n        this.film = data;\r\n      })\r\n    })\r\n  }\r\n\r\n  get favoriTmp(): Favori{\r\n    return this._favoriTmp;\r\n  }\r\n\r\n  get filmTmp(): Film{\r\n    return this._filmTmp;\r\n  }\r\n\r\n  createFavori(){\r\n    this._filmTmp = this.filmIsPresent();\r\n    if(this.filmTmp.title == \"\"){\r\n      this.filmTmp.title = this.film.title;\r\n      this.filmTmp.overwiew=this.film.overview;\r\n      this.filmTmp.releaseDate=this.film.release_date;\r\n      this.filmTmp.voteAverage=this.film.vote_average;\r\n      this.filmTmp.posterLink=\"https://image.tmdb.org/t/p/w500/\"+this.film.poster_path;\r\n\r\n      this.filmService.post(this.filmTmp).subscribe(newFilm => {\r\n        this.favoriTmp.element=newFilm.id;\r\n        this.favoriTmp.elementType=\"film\";\r\n        this.favoriTmp.utilisateur=+localStorage.getItem(\"utilisateur\");\r\n        this.favoriService.post(this.favoriTmp).subscribe();\r\n      });\r\n    }\r\n    else{\r\n      this.favoriTmp.element=this._filmTmp.id;\r\n      this.favoriTmp.elementType=\"film\";\r\n      this.favoriTmp.utilisateur=+localStorage.getItem(\"utilisateur\");\r\n      this.favoriService.post(this.favoriTmp).subscribe();\r\n    }\r\n\r\n    this.broadcastFavoriCreated.sendFavori(this._favoriTmp);\r\n\r\n    this.reset();\r\n  }\r\n\r\n  getFilms(){\r\n    this._subQueryFilm = this.filmService\r\n      .query()\r\n      .subscribe(films=>\r\n        this._films = films.map(film=>new Film().fromJson(film))\r\n      );\r\n  }\r\n\r\n  reset(){\r\n    this._filmTmp = new Film;\r\n    this._favoriTmp = new Favori;\r\n  }\r\n\r\n  @Output()\r\n  get favoriCreated(): EventEmitter<Favori>{\r\n    return this._favoriCreated;\r\n  }\r\n\r\n  @Output()\r\n  get filmCreated(): EventEmitter<Film>{\r\n    return this._filmCreated;\r\n  }\r\n\r\n  filmIsPresent(){\r\n    this.getFilms();\r\n    for(let f of this._films){\r\n      if(f.title == this.film.title){\r\n        console.log(\"La série est déja présente\");\r\n        return f;\r\n      }\r\n    }\r\n    return new Film;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n  <div *ngIf=\\\"serie\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"card mt-5 mb-5\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            {{ serie.name }}\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-5\\\">\\r\\n                <img src=\\\"https://image.tmdb.org/t/p/w500/{{ serie.poster_path }}\\\"  class=\\\"img-fluid\\\" alt=\\\"{{ serie.title }}\\\">\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-7\\\">\\r\\n                <ul class=\\\"list-group\\\">\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <strong>Premiére diffusion: </strong> {{ serie.first_air_date | date:'dd MMMM yyyy' }}\\r\\n                  </li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <strong>Crée par: </strong>\\r\\n                    <span *ngFor=\\\"let crea of serie.created_by\\\" class=\\\"badge badge-primary mr-2\\\">\\r\\n                      {{ crea.name }}\\r\\n                    </span>\\r\\n                  </li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <strong>Résumé: </strong> {{ serie.overview }}\\r\\n                  </li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <strong>Nombre de saison: </strong> {{ serie.number_of_seasons }}\\r\\n                  </li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <strong>Avis des utilisateurs: </strong> {{ serie.vote_average }} / 10\\r\\n                  </li>\\r\\n\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <strong>Network: </strong>\\r\\n                    <span *ngFor=\\\"let net of serie.networks\\\">\\r\\n                      {{ net.name }}\\r\\n                    </span>\\r\\n                  </li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <strong>Genre: </strong>\\r\\n                    <span *ngFor=\\\"let genre of serie.genres\\\" class=\\\"badge badge-primary mr-2\\\">\\r\\n                      {{ genre.name }}\\r\\n                    </span>\\r\\n                  </li>\\r\\n                  <button *ngIf=\\\"authguard.canActivate() == true\\\" (click)=\\\"createFavori()\\\" type=\\\"button\\\" class=\\\"btn btn-block btn-info\\\" value=\\\"Ajouter à mes favoris\\\">Ajouter à mes favoris</button>\\r\\n                  <button *ngIf=\\\"!authguard.canActivate()\\\" class=\\\"btn btn-block btn-info\\\">Vous devez être connecté pour ajouter cette série dans vos favoris</button>\\r\\n                </ul>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {SerieService} from '../serie/serie.service';\r\nimport {AuthguardGuard} from '../authguard.guard';\r\nimport {Serie} from '../serie/serie';\r\nimport {Favori} from '../favori/favori';\r\nimport {FavoriService} from '../favori/favori.service';\r\nimport {BroadcastFavoriCreateService} from '../broadcast-favori-create.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-detail-serie',\r\n  templateUrl: './detail-serie.component.html',\r\n  styleUrls: ['./detail-serie.component.css']\r\n})\r\nexport class DetailSerieComponent implements OnInit {\r\n  serie:any;\r\n\r\n  private _serieTmp: Serie = new Serie;\r\n  private _serieCreated:EventEmitter<Serie> = new EventEmitter();\r\n  private _series:Serie[] = [];\r\n  private _subQuerySerie: Subscription;\r\n\r\n  private _favoriTmp: Favori = new Favori;\r\n  private _favoriCreated:EventEmitter<Favori> = new EventEmitter();\r\n\r\n  constructor(public router:ActivatedRoute,private serieService:SerieService,private favoriService:FavoriService, public authguard:AuthguardGuard, public broadcastFavoriCreated:BroadcastFavoriCreateService) { }\r\n\r\n  ngOnInit() {\r\n    this.router.params.subscribe((params) => {\r\n      const id = params['serieID'];\r\n      this.serieService.getSerie(id).subscribe(data => {\r\n        this.serie = data;\r\n      })\r\n    })\r\n  }\r\n\r\n  get favoriTmp(): Favori{\r\n    return this._favoriTmp;\r\n  }\r\n\r\n  get serieTmp(): Serie{\r\n    return this._serieTmp;\r\n  }\r\n\r\n  createFavori(){\r\n    this._serieTmp = this.serieIsPresent();\r\n    if(this._serieTmp.title == \"\") {\r\n      this.serieTmp.title = this.serie.name;\r\n      this.serieTmp.overwiew = this.serie.overview;\r\n      this.serieTmp.season = this.serie.number_of_seasons;\r\n      this.serieTmp.episode = this.serie.number_of_episodes;\r\n      this.serieTmp.status = this.serie.status;\r\n      this.serieTmp.releaseDate = this.serie.first_air_date;\r\n      this.serieTmp.voteAverage = this.serie.vote_average;\r\n      this.serieTmp.posterLink = \"https://image.tmdb.org/t/p/w500/\" + this.serie.poster_path;\r\n\r\n\r\n      this.serieService.post(this.serieTmp).subscribe(newSerie => {\r\n        this.favoriTmp.element = newSerie.id;\r\n        this.favoriTmp.elementType = \"serie\";\r\n        this.favoriTmp.utilisateur = +localStorage.getItem(\"utilisateur\");\r\n        this.favoriService.post(this.favoriTmp).subscribe();\r\n      });\r\n    }\r\n    else{\r\n\r\n      this.favoriTmp.element = this._serieTmp.id;\r\n      this.favoriTmp.elementType = \"serie\";\r\n      this.favoriTmp.utilisateur = +localStorage.getItem(\"utilisateur\");\r\n      this.favoriService.post(this.favoriTmp).subscribe();\r\n    }\r\n    this.broadcastFavoriCreated.sendFavori(this._favoriTmp);\r\n\r\n    this.reset();\r\n  }\r\n\r\n  getSeries(){\r\n    this._subQuerySerie = this.serieService\r\n      .query()\r\n      .subscribe(series=>\r\n        this._series = series.map(serie=>new Serie().fromJson(serie))\r\n      );\r\n  }\r\n\r\n  reset(){\r\n    this._serieTmp = new Serie;\r\n    this._favoriTmp = new Favori;\r\n  }\r\n\r\n  @Output()\r\n  get favoriCreated(): EventEmitter<Favori>{\r\n    return this._favoriCreated;\r\n  }\r\n\r\n  @Output()\r\n  get serieCreated():EventEmitter<Serie>{\r\n    return this._serieCreated;\r\n  }\r\n\r\n  serieIsPresent(){\r\n    this.getSeries();\r\n    for(let s of this._series){\r\n      if(s.title == this.serie.name){\r\n        console.log(\"La série est déja présente\");\r\n        return s;\r\n      }\r\n    }\r\n    return new Serie;\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from 'rxjs';\r\nimport {Favori} from './favori';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FavoriService {\r\n\r\n  public static readonly URL_API_FAVORI:string=\"/api/favori\";\r\n\r\n  constructor(public http:HttpClient) { }\r\n\r\n  public query():Observable<Favori[]>{\r\n    return this.http.get<Favori[]>(FavoriService.URL_API_FAVORI);\r\n  }\r\n\r\n  public post(favori:Favori): Observable<Favori>{\r\n    return this.http.post<Favori>(FavoriService.URL_API_FAVORI, favori.toJson());\r\n  }\r\n\r\n  public update(favori:Favori): Observable<any>{\r\n    return this.http.put(FavoriService.URL_API_FAVORI, favori.toJson());\r\n  }\r\n\r\n  public delete(favori:Favori): Observable<any>{\r\n    return this.http.delete<any>(FavoriService.URL_API_FAVORI + \"/\" + favori.id);\r\n  }\r\n}\r\n","export class Favori {\r\n  private _id:number;\r\n  private _element:number;\r\n  private _elementType:string;\r\n  private _utilisateur:number;\r\n\r\n\r\n  constructor(element: number =0, elementType: string =\"\", utilisateur: number=0) {\r\n    this._element = element;\r\n    this._elementType = elementType;\r\n    this._utilisateur = utilisateur;\r\n  }\r\n\r\n  get id(): number {\r\n    return this._id;\r\n  }\r\n\r\n  set id(value: number) {\r\n    this._id = value;\r\n  }\r\n\r\n  get element(): number {\r\n    return this._element;\r\n  }\r\n\r\n  set element(value: number) {\r\n    this._element = value;\r\n  }\r\n\r\n  get elementType(): string {\r\n    return this._elementType;\r\n  }\r\n\r\n  set elementType(value: string) {\r\n    this._elementType = value;\r\n  }\r\n\r\n  get utilisateur(): number {\r\n    return this._utilisateur;\r\n  }\r\n\r\n  set utilisateur(value: number) {\r\n    this._utilisateur = value;\r\n  }\r\n\r\n  public fromJson(Json:any):Favori{\r\n    Object.assign(this,Json);\r\n    return this;\r\n  }\r\n\r\n  public toJson():any{\r\n    return{\r\n      \"id\": this._id,\r\n      \"element\": this._element,\r\n      \"elementType\": this._elementType,\r\n      \"utilisateur\": this._utilisateur\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<button (click)=\\\"getFavFilms()\\\">Charger les films</button>\\r\\n<button (click)=\\\"getFavSeries()\\\">Charger les séries</button>\\r\\n<div class=\\\"row\\\">\\r\\n  <div  class=\\\"col-sm-4\\\" *ngFor=\\\"let film of favFilms; let i = index\\\">\\r\\n    <div *ngIf=\\\"i < 18\\\">\\r\\n      <div class=\\\"card mt-3 mb-3\\\">\\r\\n        <div class=\\\"card-header text-center\\\">\\r\\n          {{ film.releaseDate}}\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <img class=\\\"card-img-top img-fluid\\\" src=\\\"{{ film.posterLink }}\\\" style=\\\"height: 400px\\\">\\r\\n          <p class=\\\"text-center\\\">{{film.title}}</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-4\\\" *ngFor=\\\"let serie of favSeries; let i = index\\\">\\r\\n    <div *ngIf=\\\"i<18\\\">\\r\\n      <div class=\\\"card mt-3 mb-3\\\">\\r\\n        <div class=\\\"card-header text-center\\\">\\r\\n          {{serie.releaseDate | date:\\\"mediumDate\\\"}}\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <img class=\\\"card-img-top img-fluid\\\" src=\\\"{{serie.posterLink}}\\\" style=\\\"height: 400px\\\">\\r\\n          <p class=\\\"text-center\\\">{{ serie.title }}</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import {Component, OnChanges, OnInit} from '@angular/core';\r\nimport {Favori} from '../favori';\r\nimport {Subscription} from 'rxjs';\r\nimport {FavoriService} from '../favori.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Serie} from '../../serie/serie';\r\nimport {Film} from '../../film/film';\r\nimport {FilmService} from '../../film/film.service';\r\nimport {SerieService} from '../../serie/serie.service';\r\nimport {AuthguardGuard} from '../../authguard.guard';\r\n\r\n@Component({\r\n  selector: 'app-gestion-favori',\r\n  templateUrl: './gestion-favori.component.html',\r\n  styleUrls: ['./gestion-favori.component.css']\r\n})\r\nexport class GestionFavoriComponent implements OnInit {\r\n\r\n  private _favoris:Favori[]=[];\r\n  private _subQueryFavori:Subscription;\r\n  private _favoriTmp: Favori = new Favori();\r\n\r\n  private _films:Film[]=[];\r\n  private _favFilms:Film[]=[];\r\n  private _subQueryFilm: Subscription;\r\n\r\n  private _series:Serie[]=[];\r\n  private _favSeries:Serie[]=[];\r\n  private _subQuerySerie: Subscription;\r\n\r\n  constructor(public favoriService:FavoriService, public filmService:FilmService, public serieService:SerieService, private router: ActivatedRoute, public authGuard: AuthguardGuard) { }\r\n\r\n  ngOnInit(){\r\n    this.getFavoris();\r\n    this.getFavFilms()\r\n    this.getFavSeries();\r\n  }\r\n\r\n  getFavFilms(){\r\n    this.getFavoris();\r\n    this.getFilms();\r\n    for(let fav of this._favoris){\r\n      if(fav.utilisateur == this.authGuard.getIdUtilisateur()){\r\n        for(let film of this._films){\r\n          if(fav.element == film.id && fav.elementType == \"film\") {\r\n            console.log(\"Film\"+film.title+\" ajouté\");\r\n            this._favFilms.push(film);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getFavSeries(){\r\n    this.getFavoris();\r\n    this.getSeries();\r\n    for(let fav of this._favoris){\r\n      if(fav.utilisateur == this.authGuard.getIdUtilisateur()){\r\n        for(let serie of this._series){\r\n          if(fav.element == serie.id && fav.elementType == \"serie\") {\r\n            console.log(\"Serie\"+serie.title+\"ajouté\");\r\n            this._favSeries.push(serie);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getFavoris(){\r\n    this._subQueryFavori = this.favoriService\r\n      .query()\r\n      .subscribe(favoris=>\r\n      this._favoris = favoris.map(favoris=>new Favori().fromJson(favoris)));\r\n  }\r\n\r\n  getFilms(){\r\n    this._subQueryFilm = this.filmService\r\n      .query()\r\n      .subscribe(films=>\r\n        this._films = films.map(film=>new Film().fromJson(film))\r\n      );\r\n  }\r\n\r\n  getSeries(){\r\n    this._subQuerySerie = this.serieService\r\n      .query()\r\n      .subscribe(series=>\r\n        this._series = series.map(serie=>new Serie().fromJson(serie))\r\n      );\r\n  }\r\n\r\n  get favoriTmp(): Favori{\r\n    return this._favoriTmp;\r\n  }\r\n\r\n  get favFilms(): Film[] {\r\n    return this._favFilms;\r\n  }\r\n\r\n  get favSeries(): Serie[] {\r\n    return this._favSeries;\r\n  }\r\n\r\n  get favoris(): Favori[] {\r\n    return this._favoris;\r\n  }\r\n\r\n  get films(): Film[] {\r\n    return this._films;\r\n  }\r\n\r\n  get series(): Serie[] {\r\n    return this._series;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-gestion-favori (favoriCreated)=\\\"postFavori($event)\\\"></app-gestion-favori>\\r\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {FavoriService} from '../favori.service';\r\nimport {Favori} from '../favori';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-smart-manager-favori',\r\n  templateUrl: './smart-manager-favori.component.html',\r\n  styleUrls: ['./smart-manager-favori.component.css']\r\n})\r\nexport class SmartManagerFavoriComponent implements OnInit, OnDestroy {\r\n\r\n  private _favoris:Favori[] = [];\r\n  private _subQueryFavori: Subscription;\r\n  private _subPostFavori: Subscription;\r\n\r\n  constructor(public favoriService:FavoriService) { }\r\n\r\n  ngOnInit() {\r\n    this.getFavoris();\r\n  }\r\n\r\n  ngOnDestroy(): void{\r\n    if(this._subQueryFavori){\r\n      this._subQueryFavori.unsubscribe();\r\n    }\r\n    if(this._subQueryFavori){\r\n      this._subPostFavori.unsubscribe();\r\n    }\r\n  }\r\n\r\n  getFavoris(){\r\n    this._subQueryFavori = this.favoriService\r\n      .query()\r\n      .subscribe(favoris=>\r\n      this._favoris = favoris.map(favori=>new Favori().fromJson(favori)))\r\n  }\r\n\r\n  postFavori(favori:Favori){\r\n    this._subPostFavori=this.favoriService.post(favori).subscribe(newFavori => this.favoris.push(new Favori().fromJson(newFavori)));\r\n  }\r\n\r\n\r\n  get favoris(): Favori[] {\r\n    return this._favoris;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n<div  class=\\\"col-sm-4\\\" *ngFor=\\\"let film of filmPopulaire; let i = index\\\">\\r\\n  <div *ngIf=\\\"i < 18\\\">\\r\\n    <div class=\\\"card mt-3 mb-3\\\">\\r\\n      <div class=\\\"card-header text-center\\\">\\r\\n        {{ film.release_date | date:'dd MMMM yyyy' }}\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <img class=\\\"card-img-top img-fluid\\\" src=\\\"https://image.tmdb.org/t/p/w500/{{ film.poster_path }}\\\" alt=\\\"{{ film.original_title }}\\\" style=\\\"height: 400px\\\">\\r\\n        <p class=\\\"text-center\\\">{{ film.title }}</p>\\r\\n        <a routerLink=\\\"/detail-film/{{film.id}}\\\" class=\\\"btn btn-block btn-info\\\" (click)=\\\"getFilmApiId(film.id)\\\">Details</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {FilmService} from './film.service';\r\nimport {Film} from './film';\r\n\r\n\r\n@Component({\r\n  selector: 'app-film',\r\n  templateUrl: './film.component.html',\r\n  styleUrls: ['./film.component.css']\r\n})\r\nexport class FilmComponent implements OnInit {\r\n  filmPopulaire:any;\r\n\r\n  constructor(private router: ActivatedRoute, private filmService: FilmService){\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.filmService.getFilmsPopulaire().subscribe(data =>{\r\n      this.filmPopulaire = data['results'];\r\n    })\r\n  }\r\n\r\n  getFilmApiId(id: number){\r\n    localStorage.setItem(\"film\",String(id))\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Film} from './film';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n@Injectable()\r\nexport class FilmService {\r\n  private film_url=\"https://api.themoviedb.org/3/\"\r\n  private api_key=\"bfb8d0b05e92cf528ef802c947b095b0\";\r\n  private page_num:1;\r\n\r\n  public static readonly URL_API_FILM:string=\"/api/film\";\r\n\r\n  constructor(public http: HttpClient) {  }\r\n\r\n  public query():Observable<Film[]>{\r\n    return this.http.get<Film[]>(FilmService.URL_API_FILM);\r\n  }\r\n\r\n  public post(film:Film): Observable<Film>{\r\n    return this.http.post<Film>(FilmService.URL_API_FILM, film.toJson());\r\n  }\r\n\r\n  getFilm(id:number){\r\n    return this.http.get(this.film_url + 'movie/' + id + '?api_key=' + this.api_key+ '&language=fr');\r\n  }\r\n\r\n  getFilmsPopulaire() {\r\n    return this.http.get(this.film_url + 'discover/movie?sort_by=popularity.desc' + '&api_key=' + this.api_key+ '&language=fr&page='+this.page_num);\r\n  }\r\n}\r\n","export class Film {\r\n\r\n  private _id:number;\r\n  private _title:string;\r\n  private _overwiew:string;\r\n  private _releaseDate:string;\r\n  private _voteAverage:number;\r\n  private _posterLink:string;\r\n\r\n\r\n  constructor(title: string=\"\", overwiew: string=\"\", releaseDate: string=\"\", voteAverage: number=0, posterLink: string=\"\") {\r\n    this._title = title;\r\n    this._overwiew = overwiew;\r\n    this._releaseDate = releaseDate;\r\n    this._voteAverage = voteAverage;\r\n    this._posterLink = posterLink;\r\n  }\r\n\r\n\r\n  get id(): number {\r\n    return this._id;\r\n  }\r\n\r\n  set id(value: number) {\r\n    this._id = value;\r\n  }\r\n\r\n  get title(): string {\r\n    return this._title;\r\n  }\r\n\r\n  set title(value: string) {\r\n    this._title = value;\r\n  }\r\n\r\n  get overwiew(): string {\r\n    return this._overwiew;\r\n  }\r\n\r\n  set overwiew(value: string) {\r\n    this._overwiew = value;\r\n  }\r\n\r\n  get releaseDate(): string {\r\n    return this._releaseDate;\r\n  }\r\n\r\n  set releaseDate(value: string) {\r\n    this._releaseDate = value;\r\n  }\r\n\r\n  get voteAverage(): number {\r\n    return this._voteAverage;\r\n  }\r\n\r\n  set voteAverage(value: number) {\r\n    this._voteAverage = value;\r\n  }\r\n\r\n  get posterLink(): string {\r\n    return this._posterLink;\r\n  }\r\n\r\n  set posterLink(value: string) {\r\n    this._posterLink = value;\r\n  }\r\n\r\n  public fromJson(Json:any):Film{\r\n    Object.assign(this,Json);\r\n    return this;\r\n  }\r\n\r\n  public toJson():any{\r\n    return{\r\n      \"id\": this._id,\r\n      \"title\": this._title,\r\n      \"overview\": this._overwiew,\r\n      \"releaseDate\": this._releaseDate,\r\n      \"voteAverage\": this._voteAverage,\r\n      \"posterLink\": this._posterLink\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-detail-film (filmCreated)=\\\"postFilm($event)\\\"></app-detail-film>\\r\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {Film} from '../film';\r\nimport {Utilisateur} from '../../utilisateur/utilisateur';\r\nimport {FilmService} from '../film.service';\r\n\r\n@Component({\r\n  selector: 'app-smart-manager-film',\r\n  templateUrl: './smart-manager-film.component.html',\r\n  styleUrls: ['./smart-manager-film.component.css']\r\n})\r\nexport class SmartManagerFilmComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  private _films:Film[] = [];\r\n  private _subQueryFilm: Subscription;\r\n  private _subPostFilm: Subscription;\r\n\r\n  constructor(public filmService:FilmService) { }\r\n\r\n  ngOnInit() {\r\n    this.getFilms();\r\n  }\r\n\r\n  ngOnDestroy(): void{\r\n    if(this._subQueryFilm){\r\n      this._subQueryFilm.unsubscribe();\r\n    }\r\n    if(this._subPostFilm){\r\n      this._subPostFilm.unsubscribe();\r\n    }\r\n  }\r\n\r\n  getFilms(){\r\n    this._subQueryFilm = this.filmService\r\n      .query()\r\n      .subscribe(films=>\r\n        this._films = films.map(film=>new Film().fromJson(film))\r\n      );\r\n  }\r\n\r\n  postFilm(film:Film){\r\n    this._subPostFilm=this.filmService.post(film).subscribe(newFilm => this.films.push(new Film().fromJson(newFilm)));\r\n  }\r\n\r\n  get films(): Film[]{\r\n    return this._films;\r\n  }\r\n\r\n}\r\n","module.exports = \".form-control-borderless {\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.form-control-borderless:hover, .form-control-borderless:active, .form-control-borderless:focus {\\r\\n  border: none;\\r\\n  outline: none;\\r\\n  box-shadow: none;\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light\\\" style=\\\"background-color: chocolate\\\">\\r\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"accueil\\\">WatchingTv</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarText\\\" aria-controls=\\\"navbarText\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarText\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a routerLink=\\\"film\\\"  class=\\\"nav-link\\\">Film</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a routerLink=\\\"série\\\" class=\\\"nav-link\\\">Serie</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"!authGuard.canActivate()\\\" class=\\\"nav-item\\\">\\r\\n        <a routerLink=\\\"connexion\\\" class=\\\"nav-link\\\">Se connecter</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"!authGuard.canActivate()\\\" class=\\\"nav-item\\\">\\r\\n        <a routerLink=\\\"inscription\\\" class=\\\"nav-link\\\">S'inscrire</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authGuard.canActivate()\\\" class=\\\"nav-item\\\">\\r\\n        <a routerLink=\\\"favoris\\\" class=\\\"nav-link\\\">Favoris</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authGuard.canActivate()\\\" class=\\\"nav-item\\\">\\r\\n        {{authGuard.getIdUtilisateur()}}\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authGuard.canActivate()\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\">Deconnexion</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <form class=\\\"form-inline my-2 my-lg-0\\\" name=\\\"research\\\">\\r\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"recherches\\\" [(ngModel)]=\\\"resultat\\\" placeholder=\\\"Rechercher\\\">\\r\\n      <button routerLink=\\\"recherche-resultat/{{resultat}}\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" name=\\\"button\\\" type=\\\"submit\\\"(click)=\\\"rechercher()\\\">Rechercher</button>\\r\\n    </form>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {NavBarService} from './nav-bar.service';\r\nimport {AuthguardGuard} from '../authguard.guard';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n  film:any;\r\n  recherches_result:any;\r\n  resultat:any;\r\n\r\n  constructor(public navBarService: NavBarService, public authGuard: AuthguardGuard) {\r\n  }\r\n\r\n  rechercher() {\r\n    this.navBarService.rechercher(this.resultat).subscribe(data => {\r\n      this.recherches_result = data['results'];\r\n      console.log(data)\r\n\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavBarService {\n\n  private film_url=\"https://api.themoviedb.org/3/\"\n  private api_key=\"bfb8d0b05e92cf528ef802c947b095b0\";\n  private recherche_string: string;\n\n  constructor(public _http: HttpClient) {\n\n  }\n\n  rechercher(recherches: string){\n    this.recherche_string = recherches;\n    return this._http.get(this.film_url + 'search/multi?api_key=' + this.api_key+ '&query=' + this.recherche_string + '&language=fr');\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div  class=\\\"col-sm-4\\\" *ngFor=\\\"let recherche of recherche_result; let i = index\\\">\\r\\n    <div *ngIf=\\\"i < 20\\\">\\r\\n      <div *ngIf=\\\"recherche.media_type=='tv'\\\">\\r\\n        <div class=\\\"card mt-3 mb-3\\\">\\r\\n          <div class=\\\"card-header text-center\\\">\\r\\n            {{ recherche.first_air_date | date:'mediumDate' }}\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <img class=\\\"card-img-top img-fluid\\\" src=\\\"https://image.tmdb.org/t/p/w500/{{ recherche.poster_path }}\\\" alt=\\\"{{ recherche.original_title }}\\\" style=\\\"height: 400px\\\">\\r\\n            <p class=\\\"text-center\\\">{{ recherche.name }}</p>\\r\\n            <a routerLink=\\\"/detail-serie/{{recherche.id}}\\\" class=\\\"btn btn-block btn-info\\\">Details</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"recherche.media_type=='movie'\\\">\\r\\n        <div class=\\\"card mt-3 mb-3\\\">\\r\\n          <div class=\\\"card-header text-center\\\">\\r\\n            {{ recherche.release_date | date:'mediumDate' }}\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <img class=\\\"card-img-top img-fluid\\\" src=\\\"https://image.tmdb.org/t/p/w500/{{ recherche.poster_path }}\\\" alt=\\\"{{ recherche.original_title }}\\\" style=\\\"height: 400px\\\">\\r\\n            <p class=\\\"text-center\\\">{{ recherche.title }}</p>\\r\\n            <a routerLink=\\\"/detail-film/{{recherche.id}}\\\" class=\\\"btn btn-block btn-info\\\">Details</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {NavBarService} from '../nav-bar/nav-bar.service';\n\n@Component({\n  selector: 'app-recherche-resultat',\n  templateUrl: './recherche-resultat.component.html',\n  styleUrls: ['./recherche-resultat.component.css']\n})\nexport class RechercheResultatComponent implements OnInit {\n  recherche_result:any;\n\n  constructor(public router:ActivatedRoute,private navBarService:NavBarService) { }\n\n  ngOnInit() {\n    this.router.params.subscribe((params)=>{\n      const string_re = params['result'];\n      this.navBarService.rechercher(string_re).subscribe(data =>{\n        this.recherche_result = data['results'];\n      })\n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\" *ngFor=\\\"let serie of seriePopulaire; let i = index\\\">\\r\\n\\r\\n      <div *ngIf=\\\"i<18\\\">\\r\\n\\r\\n          <div class=\\\"card mt-3 mb-3\\\">\\r\\n\\r\\n              <div class=\\\"card-header text-center\\\">\\r\\n\\r\\n                {{serie.first_air_date | date:\\\"dd MMMM yyyy\\\"}}\\r\\n\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"card-body\\\">\\r\\n\\r\\n                  <img class=\\\"card-img-top img-fluid\\\" src=\\\"https://image.tmdb.org/t/p/w600_and_h900_bestv2/{{serie.poster_path}}\\\" style=\\\"height: 460px\\\">\\r\\n                  <p class=\\\"text-center\\\">{{ serie.name }}</p>\\r\\n                  <a routerLink=\\\"/detail-serie/{{serie.id}}\\\" class=\\\"btn btn-block btn-info\\\" (click)=\\\"getSerieApiId(serie.id)\\\">Details</a>\\r\\n              </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {SerieService} from './serie.service';\r\n\r\n@Component({\r\n  selector: 'app-serie',\r\n  templateUrl: './serie.component.html',\r\n  styleUrls: ['./serie.component.css']\r\n})\r\nexport class SerieComponent implements OnInit {\r\n  seriePopulaire:any;\r\n\r\n  constructor(private router: ActivatedRoute, private serieService: SerieService) {}\r\n\r\n  ngOnInit() {\r\n    this.serieService.getSeriePopulaire().subscribe(data=>{this.seriePopulaire = data['results'];})\r\n  }\r\n\r\n  getSerieApiId(id: number){\r\n    localStorage.setItem(\"serie\",String(id))\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Serie} from './serie';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n@Injectable()\r\nexport class SerieService {\r\n\r\n  private _serie_url = \"https://api.themoviedb.org/3/\";\r\n  private _api_key = \"bfb8d0b05e92cf528ef802c947b095b0\";\r\n\r\n  public static readonly URL_API_SERIE:string=\"/api/serie\";\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  public query():Observable<Serie[]>{\r\n    return this.http.get<Serie[]>(SerieService.URL_API_SERIE);\r\n  }\r\n\r\n  public post(serie:Serie): Observable<Serie>{\r\n    return this.http.post<Serie>(SerieService.URL_API_SERIE, serie.toJson());\r\n  }\r\n\r\n  getSerie(id:number){\r\n    return this.http.get(this._serie_url + \"tv/\" + id + \"?api_key=\" + this._api_key + \"&language=fr\");\r\n  }\r\n\r\n  getSeriePopulaire(){\r\n    return this.http.get(this._serie_url + 'discover/tv?sort_by=popularity.desc' + '&api_key=' + this._api_key+ '&language=fr');\r\n  }\r\n\r\n}\r\n","export class Serie {\r\n\r\n  private _id:number;\r\n  private _title:string;\r\n  private _overwiew:string;\r\n  private _season:number;\r\n  private _episode:number;\r\n  private _status:string;\r\n  private _releaseDate:string;\r\n  private _voteAverage:number;\r\n  private _posterLink:string;\r\n\r\n\r\n  constructor(title: string=\"\", overwiew: string=\"\", season: number=0, episode: number=0, status: string=\"\", releaseDate: string=\"\", voteAverage: number=0, posterLink: string=\"\") {\r\n    this._title = title;\r\n    this._overwiew = overwiew;\r\n    this._season = season;\r\n    this._episode = episode;\r\n    this._status = status;\r\n    this._releaseDate = releaseDate;\r\n    this._voteAverage = voteAverage;\r\n    this._posterLink = posterLink;\r\n  }\r\n\r\n  get id(): number {\r\n    return this._id;\r\n  }\r\n\r\n  set id(value: number) {\r\n    this._id = value;\r\n  }\r\n\r\n  get title(): string {\r\n    return this._title;\r\n  }\r\n\r\n  set title(value: string) {\r\n    this._title = value;\r\n  }\r\n\r\n  get overwiew(): string {\r\n    return this._overwiew;\r\n  }\r\n\r\n  set overwiew(value: string) {\r\n    this._overwiew = value;\r\n  }\r\n\r\n  get season(): number {\r\n    return this._season;\r\n  }\r\n\r\n  set season(value: number) {\r\n    this._season = value;\r\n  }\r\n\r\n  get episode(): number {\r\n    return this._episode;\r\n  }\r\n\r\n  set episode(value: number) {\r\n    this._episode = value;\r\n  }\r\n\r\n  get status(): string {\r\n    return this._status;\r\n  }\r\n\r\n  set status(value: string) {\r\n    this._status = value;\r\n  }\r\n\r\n  get releaseDate(): string {\r\n    return this._releaseDate;\r\n  }\r\n\r\n  set releaseDate(value: string) {\r\n    this._releaseDate = value;\r\n  }\r\n\r\n  get voteAverage(): number {\r\n    return this._voteAverage;\r\n  }\r\n\r\n  set voteAverage(value: number) {\r\n    this._voteAverage = value;\r\n  }\r\n\r\n  get posterLink(): string {\r\n    return this._posterLink;\r\n  }\r\n\r\n  set posterLink(value: string) {\r\n    this._posterLink = value;\r\n  }\r\n\r\n  public fromJson(Json:any):Serie{\r\n    Object.assign(this,Json);\r\n    return this;\r\n  }\r\n\r\n  public toJson():any{\r\n    return{\r\n      \"id\": this._id,\r\n      \"title\": this._title,\r\n      \"overview\": this._overwiew,\r\n      \"season\":this._season,\r\n      \"episode\":this._episode,\r\n      \"status\":this._status,\r\n      \"releaseDate\": this._releaseDate,\r\n      \"voteAverage\": this._voteAverage,\r\n      \"posterLink\": this._posterLink\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-detail-serie (serieCreated)=\\\"postSerie($event)\\\"></app-detail-serie>\\r\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Serie} from '../serie';\r\nimport {Subscription} from 'rxjs';\r\nimport {SerieService} from '../serie.service';\r\n\r\n@Component({\r\n  selector: 'app-smart-manager-serie',\r\n  templateUrl: './smart-manager-serie.component.html',\r\n  styleUrls: ['./smart-manager-serie.component.css']\r\n})\r\nexport class SmartManagerSerieComponent implements OnInit, OnDestroy{\r\n\r\n  private _series:Serie[] = [];\r\n  private _subQuerySerie: Subscription;\r\n  private _subPostSerie: Subscription;\r\n\r\n  constructor(public serieService:SerieService) { }\r\n\r\n  ngOnInit(){\r\n    this.getSeries();\r\n  }\r\n\r\n\r\n  ngOnDestroy(): void{\r\n    if(this._subQuerySerie){\r\n      this._subQuerySerie.unsubscribe();\r\n    }\r\n    if(this._subPostSerie){\r\n      this._subPostSerie.unsubscribe();\r\n    }\r\n  }\r\n\r\n  getSeries(){\r\n    this._subQuerySerie = this.serieService\r\n      .query()\r\n      .subscribe(series=>\r\n        this._series = series.map(serie=>new Serie().fromJson(serie))\r\n      );\r\n  }\r\n\r\n  postSerie(serie:Serie){\r\n    this._subPostSerie=this.serieService.post(serie).subscribe(newSerie => this.series.push(new Serie().fromJson(newSerie)));\r\n  }\r\n\r\n  get series(): Serie[]{\r\n    return this._series;\r\n  }\r\n\r\n}\r\n","module.exports = \"ody {\\r\\n  background: #eee !important;\\r\\n}\\r\\n\\r\\n.wrapper {\\r\\n  margin-top: 80px;\\r\\n  margin-bottom: 80px;\\r\\n}\\r\\n\\r\\n.form-signin {\\r\\n  max-width: 380px;\\r\\n  padding: 15px 35px 45px;\\r\\n  margin: 0 auto;\\r\\n  background-color: #fff;\\r\\n  border: 1px solid rgba(0, 0, 0, 0.1);\\r\\n}\\r\\n\\r\\n.form-signin-heading,\\r\\n.checkbox {\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n.checkbox {\\r\\n  font-weight: normal;\\r\\n}\\r\\n\\r\\n.form-control {\\r\\n  position: relative;\\r\\n  font-size: 16px;\\r\\n  height: auto;\\r\\n  padding: 10px;\\r\\n@include box-sizing(border-box);\\r\\n}\\r\\n\\r\\ninput[type=\\\"text\\\"] {\\r\\n  margin-bottom: -1px;\\r\\n  border-bottom-left-radius: 0;\\r\\n  border-bottom-right-radius: 0;\\r\\n}\\r\\n\\r\\ninput[type=\\\"password\\\"] {\\r\\n  margin-bottom: 20px;\\r\\n  border-top-left-radius: 0;\\r\\n  border-top-right-radius: 0;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n  <form class=\\\"form-signin\\\" (submit)=\\\"login()\\\">\\r\\n    <h2 class=\\\"form-signin-heading\\\">Connexion</h2>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" placeholder=\\\"Nom d'utilisateur\\\" required=\\\"\\\" autofocus=\\\"\\\" [(ngModel)]=\\\"utilisateurTmp.username\\\"/>\\r\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Mot de passe\\\" required=\\\"\\\" [(ngModel)]=\\\"utilisateurTmp.password\\\"/>\\r\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Se connecter</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Utilisateur} from '../utilisateur';\r\nimport {UtilisateurService} from '../utilisateur.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-connexion',\r\n  templateUrl: './connexion.component.html',\r\n  styleUrls: ['./connexion.component.css']\r\n})\r\nexport class ConnexionComponent implements OnInit {\r\ns\r\n  private _utilisateurs:Utilisateur[] = [];\r\n  private _subQueryUtilisateur: Subscription;\r\n  private _utilisateurTmp: Utilisateur = new Utilisateur();\r\n\r\n\r\n  constructor(public utilisateurService:UtilisateurService, private router:Router) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login(){\r\n    this.getUtilisateurs();\r\n    for(let u of this._utilisateurs){\r\n      if(u.username == this._utilisateurTmp.username){\r\n        if(u.password == this._utilisateurTmp.password){\r\n          this.utilisateurService.setLoggedIn(u);\r\n          this.utilisateurService.setIdUtilisateur(u);\r\n          localStorage.setItem('utilisateur', String(u.id));\r\n          this.router.navigate(['accueil']);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getUtilisateurs(){\r\n    this._subQueryUtilisateur = this.utilisateurService\r\n      .query()\r\n      .subscribe(utilisateurs=>\r\n        this._utilisateurs = utilisateurs.map(utilisateur=>new Utilisateur().fromJson(utilisateur))\r\n      );\r\n  }\r\n\r\n\r\n  get utilisateurTmp(): Utilisateur {\r\n    return this._utilisateurTmp;\r\n  }\r\n\r\n  set utilisateurTmp(value: Utilisateur) {\r\n    this._utilisateurTmp = value;\r\n  }\r\n}\r\n","module.exports = \".modal-content {\\r\\n  position: relative;\\r\\n  background-color: #ffffff;\\r\\n  border: 1px solid #999999;\\r\\n  border: 1px solid rgba(0, 0, 0, 0.2);\\r\\n  border-radius: 0;\\r\\n  outline: none;\\r\\n  box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);\\r\\n  background-clip: padding-box;\\r\\n}\\r\\n.modal-header {\\r\\n  border-bottom: 1px solid #48a4ac;\\r\\n  background: #61bdc5;\\r\\n  min-height: 16.4286px;\\r\\n  padding: 10px 15px;\\r\\n}\\r\\n.close {\\r\\n  float: right;\\r\\n  font-size: 21px;\\r\\n  font-weight: 700;\\r\\n  line-height: 1;\\r\\n  color: #000;\\r\\n  text-shadow: 0 1px 0 #fff;\\r\\n  opacity: .2;\\r\\n  filter: alpha(opacity=20);\\r\\n}\\r\\n.modal-body {\\r\\n  position: relative;\\r\\n  padding: 20px;\\r\\n}\\r\\n.modal-footer {\\r\\n  padding: 19px 20px 20px;\\r\\n  margin-top: 0;\\r\\n  text-align: right;\\r\\n  border-top: 1px solid #e5e5e5;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\"><i class=\\\"fa fa-times\\\"></i></button>\\r\\n        <h4 class=\\\"modal-title\\\">Création d'un compte</h4>\\r\\n      </div>\\r\\n\\r\\n      <form action=\\\"\\\" #formUtilisateur=\\\"ngForm\\\" (submit)=\\\"createUtilisateur()\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Nom d'utilisateur</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" required=\\\"\\\" name=\\\"username\\\" value=\\\"\\\" [(ngModel)]=\\\"utilisateurTmp.username\\\">\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Mot de passe</label>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" required=\\\"\\\" name=\\\"password\\\" value=\\\"\\\" [(ngModel)]=\\\"utilisateurTmp.password\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Réecrire le Mot de passe</label>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" required=\\\"\\\" name=\\\"passwordr\\\" value=\\\"\\\" [(ngModel)]=\\\"utilisateurTmp.confirmPassword\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <input type=\\\"hidden\\\" name=\\\"isEmpty\\\" value=\\\"\\\">\\r\\n          <button type=\\\"input\\\" name=\\\"submit\\\" value=\\\"newAccount\\\" class=\\\"btn btn-success btn-icon\\\" [disabled]=\\\"!formUtilisateur.form.valid\\\"><i class=\\\"fa fa-check\\\"></i>Créer le compte</button>\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {Utilisateur} from '../utilisateur';\r\n\r\n@Component({\r\n  selector: 'app-inscription',\r\n  templateUrl: './inscription.component.html',\r\n  styleUrls: ['./inscription.component.css']\r\n})\r\nexport class InscriptionComponent implements OnInit {\r\n\r\n  private _utilisateurTmp: Utilisateur = new Utilisateur;\r\n  private _utilisateurCreated:EventEmitter<Utilisateur> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get utilisateurTmp(): Utilisateur {\r\n    return this._utilisateurTmp;\r\n  }\r\n\r\n  createUtilisateur() {\r\n    this._utilisateurCreated.next(this.utilisateurTmp);\r\n    this.reset();\r\n  }\r\n\r\n  reset(){\r\n    this._utilisateurTmp = new Utilisateur;\r\n  }\r\n\r\n  @Output()\r\n  get utilisateurCreated(): EventEmitter<Utilisateur>{\r\n    return this._utilisateurCreated;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-inscription (utilisateurCreated)=\\\"postUtilisateur($event)\\\"></app-inscription>\\r\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Utilisateur} from '../utilisateur';\r\nimport {Subscription} from 'rxjs';\r\nimport {UtilisateurService} from '../utilisateur.service';\r\n\r\n@Component({\r\n  selector: 'app-smart-manager-utilisateur',\r\n  templateUrl: './smart-manager-utilisateur.component.html',\r\n  styleUrls: ['./smart-manager-utilisateur.component.css']\r\n})\r\nexport class SmartManagerUtilisateurComponent implements OnInit,OnDestroy {\r\n\r\n  private _utilisateurs:Utilisateur[] = [];\r\n  private _subQueryUtilisateur: Subscription;\r\n  private _subPostUtilisateur: Subscription;\r\n\r\n  constructor(public utilisateurService:UtilisateurService) { }\r\n\r\n  ngOnInit() {\r\n    this.getUtilisateurs();\r\n  }\r\n\r\n  ngOnDestroy(): void{\r\n    if(this._subQueryUtilisateur){\r\n      this._subQueryUtilisateur.unsubscribe();\r\n    }\r\n    if(this._subPostUtilisateur){\r\n      this._subPostUtilisateur.unsubscribe();\r\n    }\r\n  }\r\n\r\n  getUtilisateurs(){\r\n    this._subQueryUtilisateur = this.utilisateurService\r\n      .query()\r\n      .subscribe(utilisateurs=>\r\n      this._utilisateurs = utilisateurs.map(utilisateur=>new Utilisateur().fromJson(utilisateur))\r\n      );\r\n  }\r\n\r\n  postUtilisateur(utilisateur:Utilisateur){\r\n    this._subPostUtilisateur=this.utilisateurService.post(utilisateur).subscribe(newUtilisateur => this.utilisateurs.push(new Utilisateur().fromJson(newUtilisateur)));\r\n  }\r\n\r\n  get utilisateurs(): Utilisateur[]{\r\n    return this._utilisateurs;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Utilisateur} from \"./utilisateur\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilisateurService {\r\n\r\n  public static readonly URL_API_UTILISATEUR:string=\"/api/utilisateur\";\r\n\r\n  constructor(public http:HttpClient) { }\r\n\r\n  private _isLoggedIn:boolean = false;\r\n  private _idUtilisateurLogged:number;\r\n\r\n  public query():Observable<Utilisateur[]>{\r\n    return this.http.get<Utilisateur[]>(UtilisateurService.URL_API_UTILISATEUR);\r\n  }\r\n\r\n  public post(utilisateur:Utilisateur): Observable<Utilisateur>{\r\n    return this.http.post<Utilisateur>(UtilisateurService.URL_API_UTILISATEUR, utilisateur.toJson());\r\n  }\r\n\r\n  public update(utilisateur:Utilisateur): Observable<any>{\r\n    return this.http.put(UtilisateurService.URL_API_UTILISATEUR, utilisateur.toJson());\r\n  }\r\n\r\n  public delete(utilisateur:Utilisateur): Observable<any>{\r\n    return this.http.delete<any>(UtilisateurService.URL_API_UTILISATEUR + \"/\" + utilisateur.id);\r\n  }\r\n\r\n\r\n  get isLoggedIn(): boolean {\r\n    return this._isLoggedIn;\r\n  }\r\n\r\n  setLoggedIn(utilisateur: Utilisateur) {\r\n    this._isLoggedIn = !this._isLoggedIn;\r\n  }\r\n\r\n  setIdUtilisateur(utilisateur: Utilisateur){\r\n    this._idUtilisateurLogged = utilisateur.id;\r\n  }\r\n\r\n\r\n  get idUtilisateurLogged(): number {\r\n    return this._idUtilisateurLogged;\r\n  }\r\n}\r\n","export class Utilisateur {\r\n  private _id:number;\r\n  private _username:string;\r\n  private _isAdmin:boolean;\r\n  private _password:string;\r\n  private _confirmPassword:string;\r\n\r\n  constructor(username: string =\"\", isAdmin: boolean = false, password: string = \"\", confirmPassword:string = \"\"){\r\n    this._username = username;\r\n    this._isAdmin = isAdmin;\r\n    this._password = password;\r\n    this._confirmPassword = confirmPassword;\r\n  }\r\n\r\n\r\n  get id(): number {\r\n    return this._id;\r\n  }\r\n\r\n  set id(value: number) {\r\n    this._id = value;\r\n  }\r\n\r\n  get username(): string {\r\n    return this._username;\r\n  }\r\n\r\n  set username(value: string) {\r\n    this._username = value;\r\n  }\r\n\r\n  get isAdmin(): boolean {\r\n    return this._isAdmin;\r\n  }\r\n\r\n  set isAdmin(value: boolean) {\r\n    this._isAdmin = value;\r\n  }\r\n\r\n  get password(): string {\r\n    return this._password;\r\n  }\r\n\r\n  set password(value: string) {\r\n    this._password = value;\r\n  }\r\n\r\n  get confirmPassword(): string {\r\n    return this._confirmPassword;\r\n  }\r\n\r\n  set confirmPassword(value: string) {\r\n    this._confirmPassword = value;\r\n  }\r\n\r\n  public fromJson(Json:any):Utilisateur{\r\n    Object.assign(this,Json);\r\n    return this;\r\n  }\r\n\r\n  public toJson():any{\r\n    if(this._password == this._confirmPassword){\r\n      return{\r\n        \"id\": this._id,\r\n        \"username\": this._username,\r\n        \"isAdmin\": this._isAdmin,\r\n        \"password\": this._password\r\n      }\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}